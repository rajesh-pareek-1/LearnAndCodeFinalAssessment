// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NewsSync.API.Data;

#nullable disable

namespace NewsSync.API.Migrations.NewsSyncNewsDb
{
    [DbContext(typeof(NewsSyncNewsDbContext))]
    partial class NewsSyncNewsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NewsSync.API.Models.Domain.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Headline")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublishedDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorName = "Jane",
                            CategoryId = 1,
                            Description = "AI is transforming industries.",
                            Headline = "AI Breakthrough",
                            ImageUrl = "https://example.com/img.jpg",
                            Language = "English",
                            PublishedDate = "2025-06-14",
                            Source = "TechCrunch",
                            Url = "https://example.com/ai"
                        },
                        new
                        {
                            Id = 2,
                            AuthorName = "Mike",
                            CategoryId = 2,
                            Description = "Day 1 recap of major events.",
                            Headline = "Olympics 2024 Highlights",
                            ImageUrl = "https://example.com/olympics.jpg",
                            Language = "English",
                            PublishedDate = "2024-07-25",
                            Source = "ESPN",
                            Url = "https://example.com/olympics"
                        });
                });

            modelBuilder.Entity("NewsSync.API.Models.Domain.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Tech News",
                            Name = "Technology"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Sports News",
                            Name = "Sports"
                        });
                });

            modelBuilder.Entity("NewsSync.API.Models.Domain.Keyword", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Keywords");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "AI",
                            UserId = "68be1f19-76cc-4696-8b01-e534717afe68"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Olympics",
                            UserId = "7cf397ec-ca7c-4c1f-aea0-68184da919c7"
                        });
                });

            modelBuilder.Entity("NewsSync.API.Models.Domain.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SentAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.ToTable("Notifications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArticleId = 1,
                            SentAt = new DateTime(2025, 6, 17, 10, 30, 0, 0, DateTimeKind.Utc),
                            UserId = "68be1f19-76cc-4696-8b01-e534717afe68"
                        },
                        new
                        {
                            Id = 2,
                            ArticleId = 2,
                            SentAt = new DateTime(2025, 6, 18, 8, 15, 0, 0, DateTimeKind.Utc),
                            UserId = "7cf397ec-ca7c-4c1f-aea0-68184da919c7"
                        });
                });

            modelBuilder.Entity("NewsSync.API.Models.Domain.NotificationConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("NotificationConfigurations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            UserId = "68be1f19-76cc-4696-8b01-e534717afe68"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            UserId = "7cf397ec-ca7c-4c1f-aea0-68184da919c7"
                        });
                });

            modelBuilder.Entity("NewsSync.API.Models.Domain.SavedArticle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.ToTable("SavedArticles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArticleId = 1,
                            UserId = "68be1f19-76cc-4696-8b01-e534717afe68"
                        },
                        new
                        {
                            Id = 2,
                            ArticleId = 2,
                            UserId = "7cf397ec-ca7c-4c1f-aea0-68184da919c7"
                        });
                });

            modelBuilder.Entity("NewsSync.API.Models.Domain.ServerDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApiKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BaseUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastAccess")
                        .HasColumnType("datetime2");

                    b.Property<string>("ServerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ServerDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApiKey = "4de532f9b8f941fb97ceee7df1ec2445",
                            BaseUrl = "https://newsapi.org/v2/everything",
                            LastAccess = new DateTime(2025, 6, 14, 10, 30, 0, 0, DateTimeKind.Utc),
                            ServerName = "NewsAPI SyncNode",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 2,
                            ApiKey = "Kjar4Jl0m6AvjigZQUFx8c0WuFLejmJsJ6CAXPyD",
                            BaseUrl = "https://api.thenewsapi.com/v1/news/top",
                            LastAccess = new DateTime(2025, 6, 14, 10, 30, 0, 0, DateTimeKind.Utc),
                            ServerName = "TheNewsAPI SyncNode",
                            Status = "Idle"
                        });
                });

            modelBuilder.Entity("NewsSync.API.Models.Domain.Article", b =>
                {
                    b.HasOne("NewsSync.API.Models.Domain.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("NewsSync.API.Models.Domain.Notification", b =>
                {
                    b.HasOne("NewsSync.API.Models.Domain.Article", "Article")
                        .WithMany("Notifications")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");
                });

            modelBuilder.Entity("NewsSync.API.Models.Domain.NotificationConfiguration", b =>
                {
                    b.HasOne("NewsSync.API.Models.Domain.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("NewsSync.API.Models.Domain.SavedArticle", b =>
                {
                    b.HasOne("NewsSync.API.Models.Domain.Article", "Article")
                        .WithMany("SavedByUsers")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");
                });

            modelBuilder.Entity("NewsSync.API.Models.Domain.Article", b =>
                {
                    b.Navigation("Notifications");

                    b.Navigation("SavedByUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
